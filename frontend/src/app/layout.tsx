import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/ui/navbar/navbar";
import Footer from "@/components/ui/footer/footer";
import { CartProvider } from "@/store/context/cart";
import { NextIntlClientProvider } from "next-intl";
import { jwtDecode } from "jwt-decode";
import { cookies } from "next/headers";
import { UserContextProvider, UserCookieData } from "@/store/context/user";
import { ToastContainer } from "react-toastify";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function exportJwtPayload(jwt: string) {
  try {
    const decoded = jwtDecode<UserCookieData>(jwt)
    return {
      ...decoded,
      token: jwt
    }
  } catch (err) {
    console.log(err)
    return undefined
  }
}

export default async function RootLayout({
  children,
  params
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{locale: string}>;
}>) {

  const p = await params
  const cookieStore = await cookies();
  const token = cookieStore.get('token')?.value;
  const tokenPayload = token ? exportJwtPayload(token) : undefined

  return (
    <html lang={p.locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider>
          <UserContextProvider cookieState={tokenPayload}>
            <CartProvider>
              <Navbar/>
              <ToastContainer />
              <div className="my-16 mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
                {children}
              </div>
              <Footer />
            </CartProvider>
          </UserContextProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
